{"ast":null,"code":"var _jsxFileName = \"/workspaces/Spotify-Playlist-Project/jammming/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { SearchBar } from './SearchBar';\nimport { SearchResults } from './SearchResults';\nimport { Playlist } from './Playlist';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Hardcoded playlist data for testing\n  const [playlist, setPlaylist] = useState({\n    name: 'My Playlist',\n    tracks: [{\n      id: 1,\n      name: 'Track 1',\n      artist: 'Artist 1',\n      album: 'Album 1'\n    }, {\n      id: 2,\n      name: 'Track 2',\n      artist: 'Artist 2',\n      album: 'Album 2'\n    }, {\n      id: 3,\n      name: 'Track 3',\n      artist: 'Artist 3',\n      album: 'Album 3'\n    }]\n  });\n\n  // Hardcoded search results (simulating API response)\n  const [searchResults, setSearchResults] = useState([{\n    id: 4,\n    name: 'Track 4',\n    artist: 'Artist 4',\n    album: 'Album 4'\n  }, {\n    id: 5,\n    name: 'Track 5',\n    artist: 'Artist 5',\n    album: 'Album 5'\n  }, {\n    id: 6,\n    name: 'Track 6',\n    artist: 'Artist 6',\n    album: 'Album 6'\n  }]);\n\n  // Method to add a track to the playlist if it's not already there\n  const addTrackToPlaylist = track => {\n    if (!playlist.tracks.some(existingTrack => existingTrack.id === track.id)) {\n      setPlaylist(prevPlaylist => ({\n        ...prevPlaylist,\n        tracks: [...prevPlaylist.tracks, track]\n      }));\n    }\n  };\n\n  // Method to remove a track from the playlist\n  const removeTrackFromPlaylist = track => {\n    setPlaylist(prevPlaylist => ({\n      ...prevPlaylist,\n      tracks: prevPlaylist.tracks.filter(existingTrack => existingTrack.id !== track.id)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jammming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults,\n        addTrackToPlaylist: addTrackToPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlist: playlist,\n        removeTrackFromPlaylist: removeTrackFromPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Py2ZREZtn9siDcQbSWtm6nS8dUA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SearchBar","SearchResults","Playlist","jsxDEV","_jsxDEV","App","_s","playlist","setPlaylist","useState","name","tracks","id","artist","album","searchResults","setSearchResults","addTrackToPlaylist","track","some","existingTrack","prevPlaylist","removeTrackFromPlaylist","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/Spotify-Playlist-Project/jammming/src/App.js"],"sourcesContent":["import React from 'react';\nimport { SearchBar } from './SearchBar';\nimport { SearchResults } from './SearchResults';\nimport { Playlist } from './Playlist';\nimport './App.css';\n\nfunction App() {\n  // Hardcoded playlist data for testing\n  const [playlist, setPlaylist] = useState({\n    name: 'My Playlist',\n    tracks: [\n      { id: 1, name: 'Track 1', artist: 'Artist 1', album: 'Album 1' },\n      { id: 2, name: 'Track 2', artist: 'Artist 2', album: 'Album 2' },\n      { id: 3, name: 'Track 3', artist: 'Artist 3', album: 'Album 3' },\n    ]\n  });\n\n  // Hardcoded search results (simulating API response)\n  const [searchResults, setSearchResults] = useState([\n    { id: 4, name: 'Track 4', artist: 'Artist 4', album: 'Album 4' },\n    { id: 5, name: 'Track 5', artist: 'Artist 5', album: 'Album 5' },\n    { id: 6, name: 'Track 6', artist: 'Artist 6', album: 'Album 6' },\n  ]);\n\n  // Method to add a track to the playlist if it's not already there\n  const addTrackToPlaylist = (track) => {\n    if (!playlist.tracks.some(existingTrack => existingTrack.id === track.id)) {\n      setPlaylist(prevPlaylist => ({\n        ...prevPlaylist,\n        tracks: [...prevPlaylist.tracks, track]\n      }));\n    }\n  };\n\n  // Method to remove a track from the playlist\n  const removeTrackFromPlaylist = (track) => {\n    setPlaylist(prevPlaylist => ({\n      ...prevPlaylist,\n      tracks: prevPlaylist.tracks.filter(existingTrack => existingTrack.id !== track.id)\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Jammming</h1>\n      <SearchBar />\n      <div className=\"App-content\">\n        <SearchResults searchResults={searchResults} addTrackToPlaylist={addTrackToPlaylist} />\n        <Playlist playlist={playlist} removeTrackFromPlaylist={removeTrackFromPlaylist} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}