{"ast":null,"code":"var _jsxFileName = \"/workspaces/Spotify-Playlist-Project/jammming/src/SearchBar.js\",\n  _s = $RefreshSig$();\nimport { useState, React } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchBar({\n  onSearch\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value); // Update search term as user types\n  };\n  const handleSearch = () => {\n    onSearch(searchTerm); // Trigger search with the current term\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter A Song, Album, or Artist\",\n      value: searchTerm,\n      onChange: handleInputChange // Update state on input change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SearchButton\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","React","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","searchTerm","setSearchTerm","handleInputChange","event","target","value","handleSearch","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Spotify-Playlist-Project/jammming/src/SearchBar.js"],"sourcesContent":["import { useState, React } from 'react';\nimport './SearchBar.css';\n\nexport function SearchBar({ onSearch }) {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value); // Update search term as user types\n  };\n\n  const handleSearch = () => {\n    onSearch(searchTerm); // Trigger search with the current term\n  };\n\n  return (\n    <div className=\"SearchBar\">\n      <input\n        placeholder=\"Enter A Song, Album, or Artist\"\n        value={searchTerm}\n        onChange={handleInputChange} // Update state on input change\n      />\n      <button className=\"SearchButton\" onClick={handleSearch}>\n        Search\n      </button>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,KAAK,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,SAASC,SAASA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBR,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MACEa,WAAW,EAAC,gCAAgC;MAC5CJ,KAAK,EAAEL,UAAW;MAClBU,QAAQ,EAAER,iBAAkB,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFlB,OAAA;MAAQW,SAAS,EAAC,cAAc;MAACQ,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAExD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACf,EAAA,CAvBeF,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}